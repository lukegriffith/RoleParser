<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="8" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2017-08-13" time="22:44:25">
  <environment user="" clr-version="" machine-name="" nunit-version="2.5.8.0" cwd="/Users/luke/GitHub/RoleParser" user-domain="" />
  <culture-info current-culture="en-GB" current-uiculture="en-GB" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Failure" success="False" time="298.3401" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Private Function - GetProfile" executed="True" result="Failure" success="False" time="297.4312" asserts="0" description="Private Function - GetProfile">
        <results>
          <test-case description="GetProfile - does not throw" name="Private Function - GetProfile.Machine returns correct.GetProfile - does not throw" time="0.3909" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Contains expected profiles" name="Private Function - GetProfile.Machine returns correct.Contains expected profiles" time="297.0403" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>Expected: {Choco_Package_Server Choco_Package_Monitoring_Agent Choco_App_Package Choco_Dev_Lib}
But was:  {Choco_Prod_Lib}</message>
              <stack-trace>at line: 31 in /Users/luke/GitHub/RoleParser/tests/GetProfile.tests.ps1
31:                 $profiles | should be $expectedProfiles</stack-trace>
            </failure>
          </test-case>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Private Function - GetRole" executed="True" result="Success" success="True" time="0.9089" asserts="0" description="Private Function - GetRole">
        <results>
          <test-case description="test Yaml is valid." name="Private Function - GetRole.Well formatted YAML..test Yaml is valid." time="0.249" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="GetRole gets the role structure." name="Private Function - GetRole.Well formatted YAML..GetRole gets the role structure." time="0.2085" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Role is root." name="Private Function - GetRole.Well formatted YAML..Role is root." time="0.0277" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Role has children." name="Private Function - GetRole.Well formatted YAML..Role has children." time="0.0213" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="test Yaml is valid." name="Private Function - GetRole.Poor formatted YAML..test Yaml is valid." time="0.1985" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should terminate due to recursed role." name="Private Function - GetRole.Poor formatted YAML..Should terminate due to recursed role." time="0.2039" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>